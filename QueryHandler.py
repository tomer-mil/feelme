import os
import json
from dotenv import load_dotenv
import openai
from OpenAIConfig import config

load_dotenv()
openai.api_key = os.getenv('OPENAI_API_KEY')


def generate_prompt(text: str):
    """
    The generate_prompt function takes in a string of text entered by the user (his story) and returns a ready-to-use
    query for the OpenAI server to analyze

    :param text:str: User's text (story) that will be used to generate a query
    :return: A string, which is the query that we want to send to OpenAI's api
    """
    prompt = f"find a song that represents the emotions coming from this text: \"{text}\"," \
             f"song title, artist | list of emotions"
    return prompt


def get_OpenAI_analysis(query: str):
    """
    The get_OpenAI_analysis function takes a query and returns a response from the OpenAI model.
    The function takes in a user's query, and uses the OpenAI API to generate an analysis of that string which contains
    a song, sentiments and keywords

    :param query: Generate the prompt for the OpenAI model
    :return: A dictionary containing the prompt, the text generated by our model, and a list of probabilities for each token in that text
    :doc-author: Trelent
    """

    response = openai.Completion.create(
        model=config["model"],
        prompt=generate_prompt(query),
        temperature=config["temp"],
        top_p=config["top_p"],
        length=config["length"]
    )

    return response
#
# def parse_OpenAI_response(response):
#     json.dump(response)


# analysis = get_OpenAI_analysis("I just failed my last test and i dont know how things are going to turn out. im bumped and have zero energy")


# print(analysis)




